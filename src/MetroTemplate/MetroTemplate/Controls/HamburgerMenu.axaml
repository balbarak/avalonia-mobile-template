<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="using:MetroTemplate.Controls">
	<Design.PreviewWith>
		<controls:HamburgerMenu IsOpen="True" Height="100" Width="200" />
	</Design.PreviewWith>

	<Style Selector="controls|HamburgerMenu">
		<Setter Property="Template">
			<ControlTemplate>
				<Grid x:Name="PART_Container">
					<Rectangle  Classes="rect-backdrop"
								Fill="Black"
								IsVisible="False"
								Opacity="0"
								IsHitTestVisible="{TemplateBinding IsOpen}"
							   x:Name="PART_Backdrop">
					</Rectangle>
					<Border
						x:Name="PART_Border"
						Width="300"
						HorizontalAlignment="Left"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<ContentControl Content="{TemplateBinding Content}"/>
						<Border.RenderTransform>
							<TranslateTransform X="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MenuPositionX}"/>
						</Border.RenderTransform>
					</Border>
				</Grid>
			</ControlTemplate>
		</Setter>
	</Style>

	<Style Selector="controls|HamburgerMenuItem">
		<Setter Property="Template">
			<ControlTemplate>
				<Border
					x:Name="PART_Border_Menu_Item"
					Padding="20"
					Classes="main-border"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}">
					<ContentControl Content="{TemplateBinding Content}"/>
				</Border>
			</ControlTemplate>
		</Setter>
	</Style>

	<Style Selector="Border.main-border">
		<Setter Property="Background" Value="Transparent"/>
	</Style>

	<Style Selector="Border.main-border:pointerover">
		<Setter Property="Background" Value="{DynamicResource ShellSelectedItem}"/>
	</Style>

	<Style Selector="controls|HamburgerMenuItem[IsChecked=True] > Border.main-border">
		<Setter Property="Background" Value="{DynamicResource ShellSelectedItem}"/>
	</Style>


	<!--<Style Selector="Rectangle.rect-backdrop">
		<Setter Property="Opacity" Value="0"/>
		<Setter Property="IsVisible" Value="false"/>
	</Style>
	
	<Style Selector="Rectangle.rect-backdrop[IsHitTestVisible=True]">
	
		<Style.Animations>
			<Animation Duration="0:0:0.3" FillMode="Forward" >
				<KeyFrame Cue="0%">
					<Setter Property="Opacity" Value="0.0"/>
				</KeyFrame>
				<KeyFrame Cue="1%">
					<Setter Property="IsVisible" Value="True"/>
				</KeyFrame>
				<KeyFrame Cue="100%">
					<Setter Property="Opacity" Value=".7"/>
					<Setter Property="IsVisible" Value="True"/>
				</KeyFrame>
			</Animation>
		</Style.Animations>
	</Style>

	<Style Selector="Rectangle.rect-backdrop[IsHitTestVisible=False]">
		
		<Style.Animations>
			<Animation Duration="0:0:0.3"  FillMode="Both">
				<KeyFrame Cue="0%">
					<Setter Property="Opacity" Value=".7"/>
				</KeyFrame>
				<KeyFrame Cue="100%">
					<Setter Property="Opacity" Value="0"/>
				</KeyFrame>
			</Animation>
		</Style.Animations>
	</Style>-->

	
</Styles>
